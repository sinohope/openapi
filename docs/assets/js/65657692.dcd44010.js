"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[5626],{36831:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>h,contentTitle:()=>m,default:()=>b,frontMatter:()=>p,metadata:()=>u,toc:()=>f});var n=a(87462),i=(a(67294),a(3905)),s=a(26389),r=a(94891),o=(a(75190),a(47507)),c=a(24310),l=a(63303),d=(a(75035),a(85162));const p={id:"v-1-call-back-withdrawal-confirm",title:"Withdrawal Confirmation",description:"When sinohope receives a withdrawal request, it will send a confirmation request to the URL specified by the merchant.",sidebar_label:"Withdrawal Confirmation",hide_title:!0,hide_table_of_contents:!0,api:{tags:["Callback APIs"],operationId:"/v1/call_back/withdrawal/confirm",description:"When sinohope receives a withdrawal request, it will send a confirmation request to the URL specified by the merchant.\nFor callback rules, please refer to the relevant instructions in [MPC WaaS Quick Start](./quick-start/qs-1-waas).\n",requestBody:{content:{"application/json":{schema:{required:["requestDetail","requestId"],type:"object",properties:{requestId:{type:"string",description:"The unique ID of the request, unchanged after multiple calls",example:"413497079388421"},requestDetail:{required:["txHash","sinoId","walletId","chainSymbol","assetId","from","to","toTag","amount","decimal","fee"],type:"object",description:"Detailed information of the callback request; each type of callback request corresponds to a different requestDetail structure; the format is serialized JSON string.",properties:{sinoId:{type:"string",description:"Sinohope is a unique identifier for withdrawal transactions",example:"456417158498373"},walletId:{type:"string",description:"wallet id",example:"456541901231941"},chainSymbol:{type:"string",description:"Unique identification of the chain",example:"ETH"},assetId:{type:"integer",description:"Unique token identifier",example:"ETH_ETH"},from:{type:"string",description:"from address",example:"0xc9cf7d652a036d65b3392dfcabc3d3c332082558"},to:{type:"string",description:"to address",example:"0xca1b41bc3c4ffa88e3a31bff85e3289ec375d138"},toTag:{type:"string",description:"tag",example:"1001"},note:{type:"string",description:"Fill in the value when creating a withdrawal transaction",example:"user notes"},amount:{type:"string",description:"Amount (before precision conversion),When the asset type represented by assetId is nft, it represents the number of nft (fixed to 1 for 721 contract)",example:"1230000000000000000"},decimal:{type:"integer",description:"Precision",example:18},fee:{type:"string",description:"Fee",example:"30000000000000"},gasPrice:{type:"string",description:"ethlike will have a value, non-ethlike will be given 0.",example:"1000000000"},gasLimit:{type:"string",description:"ethlike will have a value, non-ethlike will be given 0.",example:"60000"},brc20Details:{type:"array",description:null,items:{type:"object",description:"brc20",properties:{method:{type:"string",description:"operation type",example:"transfer"},ticker:{type:"string",description:"inscription name",example:"lao8"},quantity:{type:"string",description:"the number of this operation",example:"10"},inscriptionId:{type:"string",description:"inscription id",example:"c04611b4986f69bab9cc311c2780f8af38b9c0ae7adda401e410869c5b84e1bbi0"},step:{type:"int",description:"1:commit 2:reveal 3:transfer",example:3},from:{type:"string",description:"from address",example:"mzF4dysdnBZ38d9pyhKavxM3wz9Xovipom"},to:{type:"string",description:"to address",example:"2N8KGpP9knMMZJ7hgdjXsBsdMFoLKL4obEj"}},title:"brc20Detail"}},runeDetails:{type:"array",description:null,items:{type:"object",description:"rune details",properties:{fromAddress:{type:"string"},toAddress:{type:"string"},runeName:{type:"string",example:"HELLOWORLD"},runeId:{type:"string",example:"28144:387"},runeSpacedName:{type:"string",example:"HELLO\u2022WORLD"},runeSymbol:{type:"string"},runeDivisibility:{type:"int"}},title:"runeDetail"}},tokenId:{type:"string",description:"When the transaction is eth like, When the asset type represented by assetId is nft, this field is returned",example:123}}},extraInfo:{type:"string",description:"Other information related to the callback request; there is currently no clear information."}}}}},required:!1},responses:{200:{description:"successful operation",content:{"application/json":{schema:{type:"object",properties:{code:{type:"integer",example:200},requestId:{type:"string",description:"The unique ID of the request, unchanged after multiple calls",example:"431431431431431"},message:{type:"string",description:"Error message",example:""},action:{type:"string",description:"Task execution instructions, APPROVE approval, REJECT rejection",example:"APPROVE"}}}}}}},"x-codegen-request-body-name":"root",extensions:[{key:"x-codegen-request-body-name",value:"root"}],method:"post",path:"/v1/call_back/withdrawal/confirm",servers:[{url:"https://your.callback.url/"}],securitySchemes:{"BIZ-API-KEY":{type:"apiKey",in:"header",name:"BIZ-API-KEY",description:"Your API-KEY(public key)."},"BIZ-API-NONCE":{type:"apiKey",in:"header",name:"BIZ-API-NONCE",description:"A nonce value (timestamp) that is included in the data to be signed."},"BIZ-API-SIGNATURE":{type:"apiKey",in:"header",name:"BIZ-API-SIGNATURE",description:"signature of the request information(nonce,path,body) using your api private key."}},jsonRequestBodyExample:{requestId:"413497079388421",requestDetail:{sinoId:"456417158498373",walletId:"456541901231941",chainSymbol:"ETH",assetId:"ETH_ETH",from:"0xc9cf7d652a036d65b3392dfcabc3d3c332082558",to:"0xca1b41bc3c4ffa88e3a31bff85e3289ec375d138",toTag:"1001",note:"user notes",amount:"1230000000000000000",decimal:18,fee:"30000000000000",gasPrice:"1000000000",gasLimit:"60000",brc20Details:[{method:"transfer",ticker:"lao8",quantity:"10",inscriptionId:"c04611b4986f69bab9cc311c2780f8af38b9c0ae7adda401e410869c5b84e1bbi0",step:3,from:"mzF4dysdnBZ38d9pyhKavxM3wz9Xovipom",to:"2N8KGpP9knMMZJ7hgdjXsBsdMFoLKL4obEj"}],runeDetails:[{fromAddress:"string",toAddress:"string",runeName:"HELLOWORLD",runeId:"28144:387",runeSpacedName:"HELLO\u2022WORLD",runeSymbol:"string"}],tokenId:123},extraInfo:"string"},info:{title:"Sinohope WaaS API",version:"0.9.5",description:"# Common Descriptions of Parameters and Return Values \n\n## Unified Return Value Structure\n\n| Name | Description | \n| :-- | :-- |\n| code | Status code (200 for success) |\n| msg | Status description |\n| data | Response data |\n| success | Whether the request succeeded (true for success, false for failure) |\n\n## Common Error Code Definitions\n\nWhen an error occurs in Sinohope WaaS services, uniformly formatted data will be returned to the client:\n\n- `200`: Successful response. Refer to each API for the detailed response data.\n- `400`: Bad Request.\n- `401`: Unauthorized. Either API details are missing or invalid.\n- `403`: Forbidden. You do not have access to the requested resource.\n- `415`: Unsupported media type. You need to use application/json. \n- `500`: Sinohope internal error.\n\n### System Level Errors\n\n| Error Code | Description |\n| :-- | :-- |\n| 1001 | Unknown exception, please contact Sinohope customer service |\n| 1002 | Duplicate request |\n| 1004 | Invalid API Key |\n| 1005 | Signature verification failed |  \n| 1006 | IP call frequency restricted |\n| 1007 | No permission of the current API |\n| 1008 | Invalid IP address |\n| 1009 | Signature in the request header cannot be empty |\n| 1010 | Timestamp in the request header cannot be empty |\n| 1011 | Internal call exception |\n| 1012 | Invalid request, please check if there are missing headers |\n| 1013 | Signature failure |\n| 1014 | Unsupported request type (only GET and POST supported) |\n| 1015 | Missing signature parameter |\n\n### Parameter Level Errors\n\n| Error Code | Description |\n| :-- | :-- |\n| 2001 | The asset is not supported |\n| 2002 | The chain is not supported |\n| 2003 | Invalid input address |\n| 2004 | Transaction record does not exist |\n| 2005 | No permission |\n| 2006 | Abnormal transfer information (kyt check failed) | \n| 2007 | Miner fee too low |\n| 2008 | The to address is not an internal address (transfer protection) |\n| 2009 | Insufficient balance to pay transfer amount and gas fee |\n| 2010 | Insufficient gas (token transfer) | \n| 2011 | Insufficient available balance (token transfer) |\n| 2012 | Name cannot contain backslash  |\n| 2013 | Address not found for given path |\n| 2014 | Not enough gas |\n| 2015 | Invalid input assetID |\n| 2020 | No token information |\n| 2097 | Invalid pageIndex, require pageIndex >=1 |  \n| 2098 | Invalid pageSize, require pageSize <=50 and >=1 |\n| 2099 | Missing required parameter |\n| 2101 | Specified wallet does not exist |\n| 2102 | Specified asset does not exist |\n| 2103 | Specified chainSymbol does not exist |\n| 2104 | Specified vault does not exist |\n| 2106 | The maximum number of single chain address subscriptions exceeds the limit (50) |\n| 2108 | Parameter type error |\n| 2109 | AdvancedEnabled must be 0 or 1 |\n| 2110 | algorithmType must be 0 or 1 |\n| 2111 | Must be less then 50 requestIds in one query |\n| 2112 | Must be less then 50 sinoIds in one query |\n| 2113 | signAlgorithm must be one of 'personal_sign, signTypedData, eth_signTypedData_v3, eth_signTypedData_v4' | \n| 2114 | The length of requestId is too long, the maximum is 120 |\n| 2115 | Incorrect message format, or incorrect signAlgorithm parameter |\n| 2116 | Wallet and organization information do not match |\n| 2117 | Wallet and vault information do not match |\n| 2118 | Vault and organization information do not match |\n| 2119 | Current chain does not support self-transfer |\n| 2120 | Chain information organization is not configured |\n| 2121 | chainSymbol does not match with chain |\n| 2122 | Wallet address information not found |\n| 2123 | The whitelist address verification fails |\n| 2124 | Transaction insertion into the database failed |\n\n\n### Business Level Errors\n\n| Error Code | Description |  \n| :-- | :-- |\n| 4001 | Build transaction failed |\n| 4002 | Broadcast failed |\n| 4003 | The transaction of current asset can not be accelerated |\n| 4004 | The transaction to be accelerated has been contained in blockchain or the nonce has been occupied |\n| 4005 | The transaction to be canceled has been contained in blockchain or the nonce has been occupied | \n| 4006 | MPC Node not set |\n| 4007 | DKG not done |  \n| 4008 | Cannot initiate wallet creation operation on the same vault at the same time |\n| 4009 | Wallet names cannot be the same under the same vault |\n| 4010 | The value of the count parameter does not match the length of walletInfos array |\n| 4011 | Wallet quantity limit |\n| 4014 | Writing to mq failed |\n| 4015 | Transaction insertion into the database failed |\n| 4017 | The cancelled deal does not exist |\n| 4018 | The accelerated transaction status is no longer padding and the transaction cannot be accelerated |\n| 4019 | The deal accelerated by this transaction does not exist |\n\n## Data Dictionary \n\n### Transaction Fee Rate Levels\n\n| Code | Description |\n| :-- | :-- |\n| LOW | Low |\n| MIDDLE | Medium |\n| HIGH | High |\n\n### Transaction Status  \n\n| Code | Description |\n| :-- | :-- |\n| 0 | Transaction pending on secondary confirmation |\n| 1 | Transaction pending on signature |\n| 2 | Transaction pending | \n| 4 | Broadcast failed |\n| 5 | Transaction failed on blockchain |\n| 6 | Broadcast timeout |\n| 10 | Transaction success |\n| 11 | Transaction has been rollback |\n| 13 | Transaction has rejected |\n\n\n## Changelog\n\n| Version | Log | Date | Modifier |\n|-|-|-|-|\n| v0.9.0 | First version | 2023-08-04 | Owen |\n| v0.9.1 | Added new sections, fixed some APIs | 2023-08-22 | Owen |  \n| v0.9.2 | Quite many changes about transaction information, SO PLEASE JUST IGNORE THE OLD VERSIONS | 2023-09-05 | Owen |\n| v0.9.3 | Updates the request parameters of interfaces `/v1/call_back/transaction/notify` and `/v1/call_back/withdrawal/confirm` | 2023-09-05 | Owen |\n| v0.9.4 | Cumulative updates: <br/>1. Add api `/v1/waas/mpc/transaction/fee`. <br/> 2. Fix: Correct the response feild `sinoId` of api `/v1/waas/mpc/web3/sign_message` from `integer` to `string`, and the request params `chainSymbol` of apis `/v1/waas/mpc/transaction/cancel_transaction` and `/v1/waas/mpc/transaction/speedup_transaction` is modified from `required` to `non-required`. | 2023-12-25 | Shihan, etc. |\n| v0.9.5 | Added new interfaces `/v1/waas/mpc/web3/sign_result`| 2024-01-10 | wd |  "},postman:{name:"Withdrawal Confirmation",description:{content:"When sinohope receives a withdrawal request, it will send a confirmation request to the URL specified by the merchant.\nFor callback rules, please refer to the relevant instructions in [MPC WaaS Quick Start](./quick-start/qs-1-waas).\n",type:"text/plain"},url:{path:["v1","call_back","withdrawal","confirm"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Content-Type",value:"application/json"},{key:"Accept",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}}}},sidebar_class_name:"post api-method",info_path:"docs/develop/mpc-waas-api/sinohope-waas-api",custom_edit_url:null},m=void 0,u={unversionedId:"develop/mpc-waas-api/v-1-call-back-withdrawal-confirm",id:"develop/mpc-waas-api/v-1-call-back-withdrawal-confirm",title:"Withdrawal Confirmation",description:"When sinohope receives a withdrawal request, it will send a confirmation request to the URL specified by the merchant.",source:"@site/docs/develop/mpc-waas-api/v-1-call-back-withdrawal-confirm.api.mdx",sourceDirName:"develop/mpc-waas-api",slug:"/develop/mpc-waas-api/v-1-call-back-withdrawal-confirm",permalink:"/docs/develop/mpc-waas-api/v-1-call-back-withdrawal-confirm",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"v-1-call-back-withdrawal-confirm",title:"Withdrawal Confirmation",description:"When sinohope receives a withdrawal request, it will send a confirmation request to the URL specified by the merchant.",sidebar_label:"Withdrawal Confirmation",hide_title:!0,hide_table_of_contents:!0,api:{tags:["Callback APIs"],operationId:"/v1/call_back/withdrawal/confirm",description:"When sinohope receives a withdrawal request, it will send a confirmation request to the URL specified by the merchant.\nFor callback rules, please refer to the relevant instructions in [MPC WaaS Quick Start](./quick-start/qs-1-waas).\n",requestBody:{content:{"application/json":{schema:{required:["requestDetail","requestId"],type:"object",properties:{requestId:{type:"string",description:"The unique ID of the request, unchanged after multiple calls",example:"413497079388421"},requestDetail:{required:["txHash","sinoId","walletId","chainSymbol","assetId","from","to","toTag","amount","decimal","fee"],type:"object",description:"Detailed information of the callback request; each type of callback request corresponds to a different requestDetail structure; the format is serialized JSON string.",properties:{sinoId:{type:"string",description:"Sinohope is a unique identifier for withdrawal transactions",example:"456417158498373"},walletId:{type:"string",description:"wallet id",example:"456541901231941"},chainSymbol:{type:"string",description:"Unique identification of the chain",example:"ETH"},assetId:{type:"integer",description:"Unique token identifier",example:"ETH_ETH"},from:{type:"string",description:"from address",example:"0xc9cf7d652a036d65b3392dfcabc3d3c332082558"},to:{type:"string",description:"to address",example:"0xca1b41bc3c4ffa88e3a31bff85e3289ec375d138"},toTag:{type:"string",description:"tag",example:"1001"},note:{type:"string",description:"Fill in the value when creating a withdrawal transaction",example:"user notes"},amount:{type:"string",description:"Amount (before precision conversion),When the asset type represented by assetId is nft, it represents the number of nft (fixed to 1 for 721 contract)",example:"1230000000000000000"},decimal:{type:"integer",description:"Precision",example:18},fee:{type:"string",description:"Fee",example:"30000000000000"},gasPrice:{type:"string",description:"ethlike will have a value, non-ethlike will be given 0.",example:"1000000000"},gasLimit:{type:"string",description:"ethlike will have a value, non-ethlike will be given 0.",example:"60000"},brc20Details:{type:"array",description:null,items:{type:"object",description:"brc20",properties:{method:{type:"string",description:"operation type",example:"transfer"},ticker:{type:"string",description:"inscription name",example:"lao8"},quantity:{type:"string",description:"the number of this operation",example:"10"},inscriptionId:{type:"string",description:"inscription id",example:"c04611b4986f69bab9cc311c2780f8af38b9c0ae7adda401e410869c5b84e1bbi0"},step:{type:"int",description:"1:commit 2:reveal 3:transfer",example:3},from:{type:"string",description:"from address",example:"mzF4dysdnBZ38d9pyhKavxM3wz9Xovipom"},to:{type:"string",description:"to address",example:"2N8KGpP9knMMZJ7hgdjXsBsdMFoLKL4obEj"}},title:"brc20Detail"}},runeDetails:{type:"array",description:null,items:{type:"object",description:"rune details",properties:{fromAddress:{type:"string"},toAddress:{type:"string"},runeName:{type:"string",example:"HELLOWORLD"},runeId:{type:"string",example:"28144:387"},runeSpacedName:{type:"string",example:"HELLO\u2022WORLD"},runeSymbol:{type:"string"},runeDivisibility:{type:"int"}},title:"runeDetail"}},tokenId:{type:"string",description:"When the transaction is eth like, When the asset type represented by assetId is nft, this field is returned",example:123}}},extraInfo:{type:"string",description:"Other information related to the callback request; there is currently no clear information."}}}}},required:!1},responses:{200:{description:"successful operation",content:{"application/json":{schema:{type:"object",properties:{code:{type:"integer",example:200},requestId:{type:"string",description:"The unique ID of the request, unchanged after multiple calls",example:"431431431431431"},message:{type:"string",description:"Error message",example:""},action:{type:"string",description:"Task execution instructions, APPROVE approval, REJECT rejection",example:"APPROVE"}}}}}}},"x-codegen-request-body-name":"root",extensions:[{key:"x-codegen-request-body-name",value:"root"}],method:"post",path:"/v1/call_back/withdrawal/confirm",servers:[{url:"https://your.callback.url/"}],securitySchemes:{"BIZ-API-KEY":{type:"apiKey",in:"header",name:"BIZ-API-KEY",description:"Your API-KEY(public key)."},"BIZ-API-NONCE":{type:"apiKey",in:"header",name:"BIZ-API-NONCE",description:"A nonce value (timestamp) that is included in the data to be signed."},"BIZ-API-SIGNATURE":{type:"apiKey",in:"header",name:"BIZ-API-SIGNATURE",description:"signature of the request information(nonce,path,body) using your api private key."}},jsonRequestBodyExample:{requestId:"413497079388421",requestDetail:{sinoId:"456417158498373",walletId:"456541901231941",chainSymbol:"ETH",assetId:"ETH_ETH",from:"0xc9cf7d652a036d65b3392dfcabc3d3c332082558",to:"0xca1b41bc3c4ffa88e3a31bff85e3289ec375d138",toTag:"1001",note:"user notes",amount:"1230000000000000000",decimal:18,fee:"30000000000000",gasPrice:"1000000000",gasLimit:"60000",brc20Details:[{method:"transfer",ticker:"lao8",quantity:"10",inscriptionId:"c04611b4986f69bab9cc311c2780f8af38b9c0ae7adda401e410869c5b84e1bbi0",step:3,from:"mzF4dysdnBZ38d9pyhKavxM3wz9Xovipom",to:"2N8KGpP9knMMZJ7hgdjXsBsdMFoLKL4obEj"}],runeDetails:[{fromAddress:"string",toAddress:"string",runeName:"HELLOWORLD",runeId:"28144:387",runeSpacedName:"HELLO\u2022WORLD",runeSymbol:"string"}],tokenId:123},extraInfo:"string"},info:{title:"Sinohope WaaS API",version:"0.9.5",description:"# Common Descriptions of Parameters and Return Values \n\n## Unified Return Value Structure\n\n| Name | Description | \n| :-- | :-- |\n| code | Status code (200 for success) |\n| msg | Status description |\n| data | Response data |\n| success | Whether the request succeeded (true for success, false for failure) |\n\n## Common Error Code Definitions\n\nWhen an error occurs in Sinohope WaaS services, uniformly formatted data will be returned to the client:\n\n- `200`: Successful response. Refer to each API for the detailed response data.\n- `400`: Bad Request.\n- `401`: Unauthorized. Either API details are missing or invalid.\n- `403`: Forbidden. You do not have access to the requested resource.\n- `415`: Unsupported media type. You need to use application/json. \n- `500`: Sinohope internal error.\n\n### System Level Errors\n\n| Error Code | Description |\n| :-- | :-- |\n| 1001 | Unknown exception, please contact Sinohope customer service |\n| 1002 | Duplicate request |\n| 1004 | Invalid API Key |\n| 1005 | Signature verification failed |  \n| 1006 | IP call frequency restricted |\n| 1007 | No permission of the current API |\n| 1008 | Invalid IP address |\n| 1009 | Signature in the request header cannot be empty |\n| 1010 | Timestamp in the request header cannot be empty |\n| 1011 | Internal call exception |\n| 1012 | Invalid request, please check if there are missing headers |\n| 1013 | Signature failure |\n| 1014 | Unsupported request type (only GET and POST supported) |\n| 1015 | Missing signature parameter |\n\n### Parameter Level Errors\n\n| Error Code | Description |\n| :-- | :-- |\n| 2001 | The asset is not supported |\n| 2002 | The chain is not supported |\n| 2003 | Invalid input address |\n| 2004 | Transaction record does not exist |\n| 2005 | No permission |\n| 2006 | Abnormal transfer information (kyt check failed) | \n| 2007 | Miner fee too low |\n| 2008 | The to address is not an internal address (transfer protection) |\n| 2009 | Insufficient balance to pay transfer amount and gas fee |\n| 2010 | Insufficient gas (token transfer) | \n| 2011 | Insufficient available balance (token transfer) |\n| 2012 | Name cannot contain backslash \\ |\n| 2013 | Address not found for given path |\n| 2014 | Not enough gas |\n| 2015 | Invalid input assetID |\n| 2020 | No token information |\n| 2097 | Invalid pageIndex, require pageIndex >=1 |  \n| 2098 | Invalid pageSize, require pageSize <=50 and >=1 |\n| 2099 | Missing required parameter |\n| 2101 | Specified wallet does not exist |\n| 2102 | Specified asset does not exist |\n| 2103 | Specified chainSymbol does not exist |\n| 2104 | Specified vault does not exist |\n| 2106 | The maximum number of single chain address subscriptions exceeds the limit (50) |\n| 2108 | Parameter type error |\n| 2109 | AdvancedEnabled must be 0 or 1 |\n| 2110 | algorithmType must be 0 or 1 |\n| 2111 | Must be less then 50 requestIds in one query |\n| 2112 | Must be less then 50 sinoIds in one query |\n| 2113 | signAlgorithm must be one of 'personal_sign, signTypedData, eth_signTypedData_v3, eth_signTypedData_v4' | \n| 2114 | The length of requestId is too long, the maximum is 120 |\n| 2115 | Incorrect message format, or incorrect signAlgorithm parameter |\n| 2116 | Wallet and organization information do not match |\n| 2117 | Wallet and vault information do not match |\n| 2118 | Vault and organization information do not match |\n| 2119 | Current chain does not support self-transfer |\n| 2120 | Chain information organization is not configured |\n| 2121 | chainSymbol does not match with chain |\n| 2122 | Wallet address information not found |\n| 2123 | The whitelist address verification fails |\n| 2124 | Transaction insertion into the database failed |\n\n\n### Business Level Errors\n\n| Error Code | Description |  \n| :-- | :-- |\n| 4001 | Build transaction failed |\n| 4002 | Broadcast failed |\n| 4003 | The transaction of current asset can not be accelerated |\n| 4004 | The transaction to be accelerated has been contained in blockchain or the nonce has been occupied |\n| 4005 | The transaction to be canceled has been contained in blockchain or the nonce has been occupied | \n| 4006 | MPC Node not set |\n| 4007 | DKG not done |  \n| 4008 | Cannot initiate wallet creation operation on the same vault at the same time |\n| 4009 | Wallet names cannot be the same under the same vault |\n| 4010 | The value of the count parameter does not match the length of walletInfos array |\n| 4011 | Wallet quantity limit |\n| 4014 | Writing to mq failed |\n| 4015 | Transaction insertion into the database failed |\n| 4017 | The cancelled deal does not exist |\n| 4018 | The accelerated transaction status is no longer padding and the transaction cannot be accelerated |\n| 4019 | The deal accelerated by this transaction does not exist |\n\n## Data Dictionary \n\n### Transaction Fee Rate Levels\n\n| Code | Description |\n| :-- | :-- |\n| LOW | Low |\n| MIDDLE | Medium |\n| HIGH | High |\n\n### Transaction Status  \n\n| Code | Description |\n| :-- | :-- |\n| 0 | Transaction pending on secondary confirmation |\n| 1 | Transaction pending on signature |\n| 2 | Transaction pending | \n| 4 | Broadcast failed |\n| 5 | Transaction failed on blockchain |\n| 6 | Broadcast timeout |\n| 10 | Transaction success |\n| 11 | Transaction has been rollback |\n| 13 | Transaction has rejected |\n\n\n## Changelog\n\n| Version | Log | Date | Modifier |\n|-|-|-|-|\n| v0.9.0 | First version | 2023-08-04 | Owen |\n| v0.9.1 | Added new sections, fixed some APIs | 2023-08-22 | Owen |  \n| v0.9.2 | Quite many changes about transaction information, SO PLEASE JUST IGNORE THE OLD VERSIONS | 2023-09-05 | Owen |\n| v0.9.3 | Updates the request parameters of interfaces `/v1/call_back/transaction/notify` and `/v1/call_back/withdrawal/confirm` | 2023-09-05 | Owen |\n| v0.9.4 | Cumulative updates: <br/>1. Add api `/v1/waas/mpc/transaction/fee`. <br/> 2. Fix: Correct the response feild `sinoId` of api `/v1/waas/mpc/web3/sign_message` from `integer` to `string`, and the request params `chainSymbol` of apis `/v1/waas/mpc/transaction/cancel_transaction` and `/v1/waas/mpc/transaction/speedup_transaction` is modified from `required` to `non-required`. | 2023-12-25 | Shihan, etc. |\n| v0.9.5 | Added new interfaces `/v1/waas/mpc/web3/sign_result`| 2024-01-10 | wd |  "},postman:{name:"Withdrawal Confirmation",description:{content:"When sinohope receives a withdrawal request, it will send a confirmation request to the URL specified by the merchant.\nFor callback rules, please refer to the relevant instructions in [MPC WaaS Quick Start](./quick-start/qs-1-waas).\n",type:"text/plain"},url:{path:["v1","call_back","withdrawal","confirm"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Content-Type",value:"application/json"},{key:"Accept",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}}}},sidebar_class_name:"post api-method",info_path:"docs/develop/mpc-waas-api/sinohope-waas-api",custom_edit_url:null},sidebar:"mpcApiSidebar",previous:{title:"Transaction Notification",permalink:"/docs/develop/mpc-waas-api/v-1-call-back-transaction-notify"},next:{title:"Common APIs",permalink:"/docs/develop/mpc-waas-api/common-ap-is"}},h={},f=[{value:"Withdrawal Confirmation",id:"withdrawal-confirmation",level:2}],y={toc:f},g="wrapper";function b(e){let{components:t,...a}=e;return(0,i.kt)(g,(0,n.Z)({},y,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"withdrawal-confirmation"},"Withdrawal Confirmation"),(0,i.kt)("p",null,"When sinohope receives a withdrawal request, it will send a confirmation request to the URL specified by the merchant.\nFor callback rules, please refer to the relevant instructions in ",(0,i.kt)("a",{parentName:"p",href:"./quick-start/qs-1-waas"},"MPC WaaS Quick Start"),"."),(0,i.kt)(r.Z,{mdxType:"MimeTabs"},(0,i.kt)(d.Z,{label:"application/json",value:"application/json-schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{textAlign:"left"}},(0,i.kt)("strong",null,"Request Body")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)(c.Z,{collapsible:!1,name:"requestId",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The unique ID of the request, unchanged after multiple calls",example:"413497079388421"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"requestDetail"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object"),(0,i.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," required")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,i.kt)("p",null,"Detailed information of the callback request; each type of callback request corresponds to a different requestDetail structure; the format is serialized JSON string.")),(0,i.kt)(c.Z,{collapsible:!1,name:"sinoId",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Sinohope is a unique identifier for withdrawal transactions",example:"456417158498373"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"walletId",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"wallet id",example:"456541901231941"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"chainSymbol",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Unique identification of the chain",example:"ETH"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"assetId",required:!0,schemaName:"integer",qualifierMessage:void 0,schema:{type:"integer",description:"Unique token identifier",example:"ETH_ETH"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"from",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"from address",example:"0xc9cf7d652a036d65b3392dfcabc3d3c332082558"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"to",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"to address",example:"0xca1b41bc3c4ffa88e3a31bff85e3289ec375d138"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"toTag",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"tag",example:"1001"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"note",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Fill in the value when creating a withdrawal transaction",example:"user notes"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"amount",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Amount (before precision conversion),When the asset type represented by assetId is nft, it represents the number of nft (fixed to 1 for 721 contract)",example:"1230000000000000000"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"decimal",required:!0,schemaName:"integer",qualifierMessage:void 0,schema:{type:"integer",description:"Precision",example:18},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"fee",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Fee",example:"30000000000000"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"gasPrice",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"ethlike will have a value, non-ethlike will be given 0.",example:"1000000000"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"gasLimit",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"ethlike will have a value, non-ethlike will be given 0.",example:"60000"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"brc20Details"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object[]")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)("li",null,(0,i.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,i.kt)(c.Z,{collapsible:!1,name:"method",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"operation type",example:"transfer"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"ticker",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"inscription name",example:"lao8"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"quantity",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"the number of this operation",example:"10"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"inscriptionId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"inscription id",example:"c04611b4986f69bab9cc311c2780f8af38b9c0ae7adda401e410869c5b84e1bbi0"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"step",required:!1,schemaName:"int",qualifierMessage:void 0,schema:{type:"int",description:"1:commit 2:reveal 3:transfer",example:3},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"from",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"from address",example:"mzF4dysdnBZ38d9pyhKavxM3wz9Xovipom"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"to",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"to address",example:"2N8KGpP9knMMZJ7hgdjXsBsdMFoLKL4obEj"},mdxType:"SchemaItem"}),(0,i.kt)("li",null,(0,i.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]"))))),(0,i.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"runeDetails"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object[]")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)("li",null,(0,i.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,i.kt)(c.Z,{collapsible:!1,name:"fromAddress",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"toAddress",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"runeName",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"HELLOWORLD"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"runeId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"28144:387"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"runeSpacedName",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"HELLO\u2022WORLD"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"runeSymbol",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"runeDivisibility",required:!1,schemaName:"int",qualifierMessage:void 0,schema:{type:"int"},mdxType:"SchemaItem"}),(0,i.kt)("li",null,(0,i.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]"))))),(0,i.kt)(c.Z,{collapsible:!1,name:"tokenId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"When the transaction is eth like, When the asset type represented by assetId is nft, this field is returned",example:123},mdxType:"SchemaItem"})))),(0,i.kt)(c.Z,{collapsible:!1,name:"extraInfo",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Other information related to the callback request; there is currently no clear information."},mdxType:"SchemaItem"}))))),(0,i.kt)("div",null,(0,i.kt)(s.Z,{mdxType:"ApiTabs"},(0,i.kt)(d.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,i.kt)("div",null,(0,i.kt)("p",null,"successful operation")),(0,i.kt)("div",null,(0,i.kt)(r.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,i.kt)(d.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,i.kt)(l.Z,{mdxType:"SchemaTabs"},(0,i.kt)(d.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{textAlign:"left"}},(0,i.kt)("strong",null,"Schema")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)(c.Z,{collapsible:!1,name:"code",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{type:"integer",example:200},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"requestId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The unique ID of the request, unchanged after multiple calls",example:"431431431431431"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"message",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Error message",example:""},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"action",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Task execution instructions, APPROVE approval, REJECT rejection",example:"APPROVE"},mdxType:"SchemaItem"})))),(0,i.kt)(d.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,i.kt)(o.Z,{responseExample:'{\n  "code": 200,\n  "requestId": "431431431431431",\n  "message": "",\n  "action": "APPROVE"\n}',language:"json",mdxType:"ResponseSamples"}))))))))))}b.isMDXComponent=!0}}]);